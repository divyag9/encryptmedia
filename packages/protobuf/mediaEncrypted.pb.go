// Code generated by protoc-gen-go.
// source: mediaEncrypted.proto
// DO NOT EDIT!

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MediaEncrypted struct {
	Version            int64   `protobuf:"varint,1,opt,name=Version,json=version" json:"Version,omitempty"`
	GUID               string  `protobuf:"bytes,2,opt,name=GUID,json=gUID" json:"GUID,omitempty"`
	Client             string  `protobuf:"bytes,3,opt,name=Client,json=client" json:"Client,omitempty"`
	LoanType           string  `protobuf:"bytes,4,opt,name=LoanType,json=loanType" json:"LoanType,omitempty"`
	OrderNumber        string  `protobuf:"bytes,5,opt,name=OrderNumber,json=orderNumber" json:"OrderNumber,omitempty"`
	UserName           string  `protobuf:"bytes,6,opt,name=UserName,json=userName" json:"UserName,omitempty"`
	Latitude           float32 `protobuf:"fixed32,7,opt,name=Latitude,json=latitude" json:"Latitude,omitempty"`
	Longitude          float32 `protobuf:"fixed32,8,opt,name=Longitude,json=longitude" json:"Longitude,omitempty"`
	DateTaken          string  `protobuf:"bytes,9,opt,name=DateTaken,json=dateTaken" json:"DateTaken,omitempty"`
	DeviceModel        string  `protobuf:"bytes,10,opt,name=DeviceModel,json=deviceModel" json:"DeviceModel,omitempty"`
	DeviceOS           string  `protobuf:"bytes,11,opt,name=DeviceOS,json=deviceOS" json:"DeviceOS,omitempty"`
	DeviceOSVersion    string  `protobuf:"bytes,12,opt,name=DeviceOSVersion,json=deviceOSVersion" json:"DeviceOSVersion,omitempty"`
	FileName           string  `protobuf:"bytes,13,opt,name=FileName,json=fileName" json:"FileName,omitempty"`
	MimeType           string  `protobuf:"bytes,14,opt,name=MimeType,json=mimeType" json:"MimeType,omitempty"`
	Application        string  `protobuf:"bytes,15,opt,name=Application,json=application" json:"Application,omitempty"`
	ApplicationID      string  `protobuf:"bytes,16,opt,name=ApplicationID,json=applicationID" json:"ApplicationID,omitempty"`
	ApplicationVersion string  `protobuf:"bytes,17,opt,name=ApplicationVersion,json=applicationVersion" json:"ApplicationVersion,omitempty"`
	EncryptedBytes     []byte  `protobuf:"bytes,18,opt,name=EncryptedBytes,json=encryptedBytes,proto3" json:"EncryptedBytes,omitempty"`
	EncryptedKey       []byte  `protobuf:"bytes,19,opt,name=EncryptedKey,json=encryptedKey,proto3" json:"EncryptedKey,omitempty"`
	PrivateKey         []byte  `protobuf:"bytes,20,opt,name=PrivateKey,json=privateKey,proto3" json:"PrivateKey,omitempty"`
}

func (m *MediaEncrypted) Reset()                    { *m = MediaEncrypted{} }
func (m *MediaEncrypted) String() string            { return proto.CompactTextString(m) }
func (*MediaEncrypted) ProtoMessage()               {}
func (*MediaEncrypted) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func init() {
	proto.RegisterType((*MediaEncrypted)(nil), "protobuf.MediaEncrypted")
}

func init() { proto.RegisterFile("mediaEncrypted.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 386 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x92, 0x5f, 0x8f, 0xd2, 0x40,
	0x14, 0xc5, 0xb3, 0xbb, 0x6c, 0x69, 0x2f, 0xa5, 0xe8, 0x75, 0x63, 0x26, 0xc6, 0x98, 0xcd, 0xc6,
	0x18, 0x9e, 0x78, 0xf1, 0x13, 0xa8, 0xa8, 0x31, 0x82, 0x18, 0x04, 0xdf, 0x87, 0xce, 0x85, 0x4c,
	0xec, 0xbf, 0x94, 0x96, 0xa4, 0xdf, 0xc1, 0x0f, 0xed, 0xcc, 0x9d, 0x16, 0x4a, 0x7c, 0x6a, 0xcf,
	0x39, 0xbf, 0xb9, 0x3d, 0x33, 0x1d, 0x78, 0x48, 0x49, 0x69, 0xf9, 0x39, 0x8b, 0xcb, 0xa6, 0xa8,
	0x48, 0xcd, 0x8a, 0x32, 0xaf, 0x72, 0xf4, 0xf9, 0xb1, 0xab, 0xf7, 0x4f, 0x7f, 0xef, 0x21, 0x5a,
	0x5e, 0x21, 0x28, 0x60, 0xf8, 0x9b, 0xca, 0xa3, 0xce, 0x33, 0x71, 0xf3, 0x78, 0x33, 0xbd, 0x5b,
	0x0f, 0x4f, 0x4e, 0x22, 0xc2, 0xe0, 0xeb, 0xf6, 0xdb, 0x5c, 0xdc, 0x1a, 0x3b, 0x58, 0x0f, 0x0e,
	0xe6, 0x1d, 0x5f, 0x82, 0xf7, 0x29, 0xd1, 0x94, 0x55, 0xe2, 0x8e, 0x5d, 0x2f, 0x66, 0x85, 0xaf,
	0xc0, 0x5f, 0xe4, 0x32, 0xdb, 0x34, 0x05, 0x89, 0x01, 0x27, 0x7e, 0xd2, 0x6a, 0x7c, 0x84, 0xd1,
	0xaa, 0x54, 0x54, 0xfe, 0xa8, 0xd3, 0x1d, 0x95, 0xe2, 0x9e, 0xe3, 0x51, 0x7e, 0xb1, 0xec, 0xea,
	0xed, 0xd1, 0x28, 0x99, 0x92, 0xf0, 0xdc, 0xea, 0xba, 0xd5, 0x3c, 0x59, 0x56, 0xba, 0xaa, 0x15,
	0x89, 0xa1, 0xc9, 0x6e, 0xcd, 0xe4, 0x56, 0xe3, 0x6b, 0x08, 0x16, 0x79, 0x76, 0x70, 0xa1, 0xcf,
	0x61, 0x90, 0x74, 0x86, 0x4d, 0xe7, 0xb2, 0xa2, 0x8d, 0xfc, 0x43, 0x99, 0x08, 0x78, 0x6c, 0xa0,
	0x3a, 0xc3, 0xb6, 0x9a, 0xd3, 0x49, 0xc7, 0xb4, 0xcc, 0x15, 0x25, 0x02, 0x5c, 0x2b, 0x75, 0xb1,
	0xec, 0x97, 0x1d, 0xb1, 0xfa, 0x25, 0x46, 0xae, 0x95, 0x6a, 0x35, 0x4e, 0x61, 0xd2, 0x65, 0xdd,
	0xe9, 0x85, 0x8c, 0x4c, 0xd4, 0xb5, 0x6d, 0xa7, 0x7c, 0xd1, 0x09, 0xf1, 0xde, 0xc6, 0x6e, 0xca,
	0xbe, 0xd5, 0x36, 0x5b, 0xea, 0x94, 0xf8, 0xd4, 0x22, 0x97, 0xa5, 0xad, 0xb6, 0xfd, 0x3e, 0x14,
	0x45, 0xa2, 0x63, 0xb3, 0x59, 0x33, 0x7d, 0xe2, 0xfa, 0xc9, 0x8b, 0x85, 0x6f, 0x61, 0xdc, 0x23,
	0xcc, 0x8f, 0x7a, 0xc6, 0xcc, 0x58, 0xf6, 0x4d, 0x9c, 0x01, 0xf6, 0xa8, 0xae, 0xec, 0x73, 0x46,
	0x51, 0xfe, 0x97, 0xe0, 0x3b, 0x88, 0xce, 0x97, 0xe3, 0x63, 0x53, 0xd1, 0x51, 0xa0, 0x61, 0xc3,
	0x75, 0x44, 0x57, 0x2e, 0x3e, 0x41, 0x78, 0xe6, 0xbe, 0x53, 0x23, 0x5e, 0x30, 0x15, 0x52, 0xcf,
	0xc3, 0x37, 0x00, 0x3f, 0x4b, 0x7d, 0x32, 0x67, 0x6e, 0x89, 0x07, 0x26, 0xa0, 0x38, 0x3b, 0x3b,
	0x8f, 0x2f, 0xe6, 0xfb, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x49, 0x0a, 0x69, 0xf5, 0xb7, 0x02,
	0x00, 0x00,
}
