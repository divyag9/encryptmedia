package main

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/divyag9/encryptmedia/packages"
)

func main() {
	client := http.Client{}
	// Generated bytes of the following protobuf
	// protobuf.Media{Version: 1,
	// 	GUID:               "test",
	// 	Client:             "test",
	// 	LoanType:           "test",
	// 	OrderNumber:        "test",
	// 	UserName:           "test",
	// 	Latitude:           1.0,
	// 	Longitude:          2.0,
	// 	DateTaken:          "test",
	// 	DeviceModel:        "test",
	// 	DeviceOS:           "test",
	// 	DeviceOSVersion:    "test",
	// 	FileName:           "test",
	// 	Bytes:              []byte{1, 2, 3, 4},
	// 	MimeType:           "test",
	// 	Application:        "test",
	// 	ApplicationID:      "test",
	// 	ApplicationVersion: "test"}
	var reqBytes = []byte{8, 1, 18, 4, 116, 101, 115, 116, 26, 4, 116, 101, 115, 116, 34, 4, 116, 101, 115, 116, 42, 4, 116, 101, 115, 116, 50, 4, 116, 101, 115, 116, 61, 0, 0, 128, 63, 69, 0, 0, 0, 64, 74, 4, 116, 101, 115, 116, 82, 4, 116, 101, 115, 116, 90, 4, 116, 101, 115, 116, 98, 4, 116, 101, 115, 116, 106, 4, 116, 101, 115, 116, 114, 4, 116, 101, 115, 116, 122, 4, 116, 101, 115, 116, 130, 1, 4, 116, 101, 115, 116, 138, 1, 4, 116, 101, 115, 116, 146, 1, 4, 1, 2, 3, 4}
	url := "http://localhost:8080/"
	req, err := http.NewRequest("POST", url, bytes.NewBuffer(reqBytes))
	req.Header.Set("Content-Type", "application/octet-stream")

	resp, err := client.Do(req)
	if err != nil {
		fmt.Println("Error occured posting the request.")
	} else {
		body, _ := ioutil.ReadAll(resp.Body)
		//Example where we are trying to save to file
		file := &File{}
		file.mediaBytes = body
		encryptMedia.SaveMedia(file)
		fmt.Println(string(body))
	}
}

//File struct to save the mediabytes to file
type File struct {
	mediaBytes []byte
}

//Save the mediaBytes to File
func (f *File) Save() error {
	//will get from config
	fileName := "test"
	err := ioutil.WriteFile(fileName, f.mediaBytes, 0644)

	return err
}
